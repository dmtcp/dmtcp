# This Makefile.mtcp is for standalone debugging of the mtcp directory.
#   Copy this to GNUmakefile, if you want this to take precedence for debugging.
# Use the Makefile generated by Makefile.in to build full DMTCP and install.

CC=gcc

ARM_EXTRAS = libc-do-syscall-arm.S

../../bin/mtcp_restart: mtcp_restart.o
	${CC} -fPIC -g -O2 -nodefaultlibs ${ARM_EXTRAS} -o $@ $<

mtcp_restart.o: mtcp_restart.c mtcp_util.ic \
	        mtcp_sys.h mtcp_util.h \
	        ../membarrier.h ../../include/procmapsarea.h
	${CC} ${MTCP_CFLAGS} -I. -I.. -I../../include \
	    -DPIC -fPIC -g -O0 -fno-stack-protector -c $<

# 'automake' would call "make" withtarget 'all'.
# This file is not intended for 'automake', but add this target just in case.
all: ../../bin/mtcp_restart
	echo "'automake' just called 'all' in mtcp subdirectory"

# Try 'make gdb' before 'make check' if you want debugging information
#   available in the case of 'make check' dumping core.
check: ../../bin/mtcp_restart ckpt_dmtcp1_test.dmtcp
	@echo 'Expected result: "Error 99" (MTCP transfered to DMTCP correctly)'
	../../bin/mtcp_restart --text-offset `./text_offset.sh ../../bin/mtcp_restart` ckpt_dmtcp1_test.dmtcp

gdb: build_mtcp_restart_debug gdb_run
build_mtcp_restart_debug:
	rm -f mtcp_restart.o
	make MTCP_CFLAGS=-DDEBUG mtcp_restart.o
gdb_run: ../../bin/mtcp_restart ckpt_dmtcp1_test.dmtcp
	offset=`./text_offset.sh ../../bin/mtcp_restart` ; \
	  gdb --args ../../bin/mtcp_restart \
	    --use-gdb --text-offset $$offset ckpt_dmtcp1_test.dmtcp
ckpt_dmtcp1_test.dmtcp: ../../test/dmtcp1
	../../bin/dmtcp_launch -i3 ../../test/dmtcp1 &
	sleep 5 && ../../bin/dmtcp_command --quit
	rm -f `ls -t dmtcp_restart_script*.sh`
	mv `ls -t ckpt_dmtcp1_*.dmtcp | head -1` ckpt_dmtcp1_test.dmtcp.gz
	gunzip ckpt_dmtcp1_test.dmtcp.gz

tidy:
	rm -rf ckpt_*_files
	rm -f ckpt_*.dmtcp dmtcp_restart_script* core*

clean: tidy
	-rm -f *.o
	-rm -f $(targetdir)/bin/mtcp_restart

install:

uninstall:

distclean:
