To install, use:
  ./configure
  make
  make check [Optional]

"make check2", and "make check3" will exercise further examples in the
test subdirectory:
  check2: readline.c
  check3: shared-memory.c

This software will install in the build directory.
A Debian package is available that will install system-wide.

To checkpoint only a single process (possibly multi-threaded), you may
also consider using only the MTCP module.  To use MTCP, do:
    cd mtcp; make check  [to try it out]
    [ First, modify Makefile to uncomment "CFLAGS=...-DDEBUG" if desired. ]
The mtcp subdirectory is independent of the rest of DMTCP.  To include it
in your application, you only need to include the mtcp directory.
Then look at testmtcp.c and other test files.  The key functions
are listed in mtcp.c:
  mtcp_init()
  mtcp_ok()
  mtcp_no()
Currently, we checkpoint on a timer, but it would be easy to add a function
to checkpoint upon request by the application.

If your process will create multiple processes, you should use DMTCP.
The file dmtcp/dmtcp/INSTALL also exists.  A brief overview follows.
    cd dmtcp
The general methodology is:
  ./dmtcp_coordinator [in one window: type h to the coordinator to see commands]
  ./dmtcp_checkpoint a.out <args,...>

Note that files /tmp/jassertlog.* are created with debugging information.
See dmtcp/dmtcp/README for how to compile with debugging information
and other options.

See the file "QUICK-START" for further information on using DMTCP.
