@SET_MAKE@
LN_S=@LN_S@
MKDIR_P=@MKDIR_P@
CC=@CC@
M32=@M32@
prefix=@prefix@
mandir=@mandir@

ifeq ($(M32),1)
  MTCP_MAKE_FLAGS=M32=1
else
  MTCP_MAKE_FLAGS=CC=$(CC)
endif

# Macros TEST and XTERM_E used on command line by check1, check2, ...:
#   make TEST=readline XTERM_E="xterm -e" check-readline

default: mtcp dmtcp
	($(MAKE) bin)

all: default tests

mtcp:
	(cd mtcp && $(MAKE) $(MTCP_MAKE_FLAGS) build readmtcp)

dmtcp:
	(cd dmtcp/src && $(MAKE))

tests: default
	(cd test && $(MAKE) $(MTCP_MAKE_FLAGS))

#prevent mtcp_restart from flying out of control
LIMIT=ulimit -v 1048576

check:  all
	+bash -c "$(LIMIT) && ./test/autotest.py $*"

check-%: all
	+bash -c "$(LIMIT) && ./test/autotest.py $*"

check1: icheck-dmtcp1

check2: tests
	${MAKE} XTERM_E="xterm -e" icheck-readline

check3: icheck-shared-memory

icheck-%: tests
	@ echo ""
	@ echo "*** Type:"
	@ echo "***       h<return> for Help (optional)"
	@ echo "***       c<return> to Checkpoint"
	@ echo "***       k<return> to Kill and observe the Restart"
	@ echo "***       c<return> to Checkpoint again"
	@ echo "***       k<return> to Kill and restart again"
	@ echo "***       q<return> to Quit"
	@ echo ""
	@ echo "Press <return> when ready to start."
	@ read -p "> " dummy
	@ ( rm -f ckpt_$*_* && sleep 3 && \
		echo "" && echo "*** Starting Program" && echo "" && \
		${XTERM_E} $$PWD/bin/dmtcp_checkpoint --join test/$* && \
		echo "" && echo "*** Restarting Program from Checkpoint" \
		  "(press q<return> to quit)" && echo "" && \
		until ls ckpt_$*_*.dmtcp > /dev/null 2>&1; do true; done; \
		${XTERM_E} $$PWD/bin/dmtcp_restart --join --quiet ckpt_$*_*.dmtcp; \
		echo "" && echo "*** Again Restarting Program from Checkpoint" \
		  "(press q<return> to quit)" && echo "" && \
		until ls ckpt_$*_*.dmtcp > /dev/null 2>&1; do true; done; \
		${XTERM_E} $$PWD/bin/dmtcp_restart --join --quiet ckpt_$*_*.dmtcp; \
		) &
	@ bin/dmtcp_coordinator

tidy:
	rm -f ckpt_* dmtcp_restart_script.sh dmtcp-shared-memory.*
	rm -rf dmtcp-autotest-*

clean: tidy
	-(cd mtcp  && $(MAKE) clean)
	-(cd dmtcp && $(MAKE) clean)
	-(cd test  && $(MAKE) clean)

distclean: clean
	-(cd mtcp  && $(MAKE) distclean)
	-(cd dmtcp && $(MAKE) distclean)  
	rm -f Makefile test/Makefile test/testconfig.py config.log config.status bin/*

dist: distclean
	dir=`pwd`; cd ..; tar czvf dmtcp.tgz --exclude='.*/.svn/*' \
	                                     --exclude='*/.svn'    \
					     --exclude='*/.deps' ./`basename $$dir`
	ls -l ../dmtcp.tgz

bin/% : dmtcp/src/%
	(cd bin && $(LN_S) ../$< $*)

bin/% : mtcp/%
	(cd bin && $(LN_S) ../$< $*)

bin: bin/dmtcp_coordinator bin/dmtcp_checkpoint bin/dmtcp_restart bin/dmtcphijack.so bin/mtcp.so bin/mtcp_restart bin/dmtcp_command bin/dmtcp_nocheckpoint

install: all 
	if test -z "$(prefix)"; then \
		echo ERROR: prefix must be defined; \
		exit 1; \
	fi
	(cd dmtcp && make prefix=$(prefix) install)
	cp mtcp/mtcp.so $(prefix)/lib/dmtcp
	cp mtcp/mtcp_restart $(prefix)/lib/dmtcp
	$(MKDIR_P) $(prefix)/bin
	(cd $(prefix)/bin && $(LN_S) ../lib/dmtcp/dmtcp_coordinator)
	(cd $(prefix)/bin && $(LN_S) ../lib/dmtcp/dmtcp_checkpoint)
	(cd $(prefix)/bin && $(LN_S) ../lib/dmtcp/dmtcp_nocheckpoint)
	(cd $(prefix)/bin && $(LN_S) ../lib/dmtcp/dmtcp_restart)
	(cd $(prefix)/bin && $(LN_S) ../lib/dmtcp/dmtcp_command)

uninstall:
	rm -f "$(prefix)/bin/dmtcp_coordinator"
	rm -f "$(prefix)/bin/dmtcp_checkpoint"
	rm -f "$(prefix)/bin/dmtcp_nocheckpoint"
	rm -f "$(prefix)/bin/dmtcp_restart"
	rm -f "$(prefix)/bin/dmtcp_command"
	rm -f "$(prefix)/lib/libdmtcpaware.so"
	rm -Rf "$(prefix)/lib/dmtcp"
	rm -Rf "$(prefix)/include/dmtcp"
 
.PHONY: all mtcp dmtcp clean distclean bin examples dmtcp_noexamples

